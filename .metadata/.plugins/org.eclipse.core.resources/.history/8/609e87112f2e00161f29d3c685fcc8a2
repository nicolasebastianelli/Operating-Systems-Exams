package esamejava20120628;

import java.util.concurrent.locks.Condition;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;

public class Main {
	private Lock lock = new ReentrantLock();
	private Condition oo = lock.newCondition();
	private Condition oe = lock.newCondition();
	private Condition eo = lock.newCondition();
	private Condition ee = lock.newCondition();
	private Condition operaio = lock.newCondition();
	private int sosp_oo = 0;
	private int sosp_oe = 0;
	private int sosp_eo = 0;
	private int sosp_ee = 0;
	private Boolean occupatoO = false;
	private Boolean occupatoE = false;
	private int maxTerrazza;
	private int nTerrazza = 0;

	public Main(int maxTerrazza) {
		super();
		this.maxTerrazza = maxTerrazza;
	}

	public void daOvestTrattoOInizio(int id) throws InterruptedException {
		Boolean fine = false;
		lock.lock();
		try {
			while (!fine) {
				if (sosp_eo != 0 || maxTerrazza == nTerrazza || occupatoO == true) {
					System.out.println("[Visistatore " + id + "]: Sospeso (da Ovest tratto O)");
					sosp_oo++;
					oo.await();
					sosp_oo--;
				} else {
					fine = true;
					occupatoO = true;
					System.out.println("[Visitatore " + id + "]: Entrato nel tratto O");
				}
			}
		} finally {
			lock.unlock();
		}
	}

	public void daOvestTrattoOFine(int id) throws InterruptedException {
		lock.lock();
		try {
			occupatoO = false;
			nTerrazza++;
			System.out.println("[Visitatore " + id + "]: Entrato nella terrazza (dal tratto O");
		} finally {
			lock.unlock();
		}
	}

	public void daOvestTrattoEInizio(int id) throws InterruptedException {
		Boolean fine = false;
		lock.lock();
		try {
			while (!fine) {
				if (occupatoE == true) {
					System.out.println("[Visistatore " + id + "]: Sospeso (da Ovest tratto E )");
					sosp_oe++;
					oe.await();
					sosp_oe--;
				} else {
					fine = true;
					occupatoE = true;
					nTerrazza--;
					System.out.println("[Visitatore " + id + "]: Uscito dalla terrazza (entrato nel tratto E) ");
				}
			}
		} finally {
			lock.unlock();
		}
	}
	
	public void daOvestTrattoEFine(int id) throws InterruptedException {
		lock.lock();
		try {
			occupatoE = false;
			System.out.println("[Visitatore " + id + "]: Uscito dal tratto E");
		} finally {
			lock.unlock();
		}
	}


	public void daEstTrattoOInizio(int id) throws InterruptedException {
		Boolean fine = false;
		lock.lock();
		try {
			while (!fine) {
				if (occupatoO==true) {
					System.out.println("[Visistatore " + id + "]: Sospeso (da Est tratto O) ");
					sosp_eo++;
					eo.await();
					sosp_eo--;
				} else {
					fine = true;
					occupatoO=true;
					nTerrazza--;
					System.out.println("[Visitatore " + id + "]: Uscito dalla terrazza (entrato nel tratto O)");
				}
			}
		} finally {
			lock.unlock();
		}
	}
	
	public void daEstTrattoOFine(int id) throws InterruptedException {
		lock.lock();
		try {
			occupatoO = false;
			System.out.println("[Visitatore " + id + "]: Uscito dal tratto O");
		} finally {
			lock.unlock();
		}
	}

	public void daEstTrattoEInizio(int id) throws InterruptedException {
		Boolean fine = false;
		lock.lock();
		try {
			while (!fine) {
				if (sosp_oe != 0 || maxTerrazza == nTerrazza || occupatoE == true) {
					System.out.println("[Visistatore " + id + "]: Sospeso (da Est tratto E ");
					sosp_oo++;
					oo.await();
					sosp_oo--;
				} else {
					fine = true;
					occupatoE = true;
					nTerrazza++;
					System.out.println("[Visitatore " + id + "]: Entrato nel tratto E");
				}
			}
		} finally {
			lock.unlock();
		}
	}
	
	public void daEstTrattoEFine(int id) throws InterruptedException {
		lock.lock();
		try {
			occupatoE = false;
			System.out.println("[Visitatore " + id + "]: Entrato nella terrazza (dal tratto E)");
		} finally {
			lock.unlock();
		}
	}
	
}
